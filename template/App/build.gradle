buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.11.+'
    classpath 'com.jakewharton.hugo:hugo-plugin:1.1.+'
    classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.+'
  }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'android'
apply plugin: 'hugo'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
// bump for dogfood builds, public betas, etc.
def versionBuild = 0

def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
  compileSdkVersion 19
  buildToolsVersion '19.1.0'

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  lintOptions {
    abortOnError false
  }

  testBuildType "debug"

  signingConfigs {
    release
  }

  buildTypes {
    debug {
      applicationIdSuffix ".debug"
      versionNameSuffix "-debug"
    }
    release {
      signingConfig signingConfigs.debug
      runProguard false
    }
  }

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 19

    applicationId "{package_name}"
    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

    testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
}

dependencies {
  compile 'com.squareup.dagger:dagger:1.2.+'
  provided 'com.squareup.dagger:dagger-compiler:1.2.+'

  compile 'com.squareup.retrofit:retrofit:1.6.0'
  compile 'com.squareup.okhttp:okhttp:2.0.0-RC2'
  compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0-RC2'

  compile 'com.squareup.picasso:picasso:2.3.+'

  compile 'com.netflix.rxjava:rxjava-android:0.19.+'

  compile 'com.jakewharton:butterknife:5.0.+'
  compile 'com.jakewharton.timber:timber:2.2.2'

  compile 'de.keyboardsurfer.android.widget:crouton:1.8.+'

  debugCompile 'com.jakewharton.madge:madge:1.1.+'
  debugCompile 'com.jakewharton.scalpel:scalpel:1.1.+'

  compile 'com.android.support:support-v4:19.0.+'

  androidTestCompile('com.jakewharton.espresso:espresso:1.1-r3') {
    exclude group: 'com.squareup.dagger'
  }
  androidTestCompile 'com.jakewharton.espresso:espresso-support-v4:1.1-r3'
}

android.applicationVariants.all { variant ->
  def name = variant.buildType.name

  // Rename apk
  def apk = variant.packageApplication.outputFile;
  def newName = apk.name.replace(".apk",
      "-v${android.defaultConfig.versionName}-${versionBuild}.apk");
  newName = newName.replace("app", "${android.defaultConfig.packageName}");
  variant.packageApplication.outputFile = new File(apk.parentFile, newName);
  if (variant.zipAlign) {
    variant.zipAlign.outputFile = new File(apk.parentFile, newName.replace("-unaligned", ""));
  }
}